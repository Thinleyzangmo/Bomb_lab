Phase 1 :

lab-2@lab2-OptiPlex-3040:~/Desktop/12190090/bomb001$ gdb bomb
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bomb…


(gdb) b phase_1                    //set up break point
Breakpoint 1 at 0x400e8d

(gdb) r                           //run the program
Starting program: /home/lab-2/Desktop/12190090/bomb001/bomb 
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
Hello   //gave “hello” as input for now as we don’t know the answer.

Breakpoint 1, 0x0000000000400e8d in phase_1 ()
(gdb) disas                      //disassembled the phase 1
Dump of assembler code for function phase_1:
=> 0x0000000000400e8d <+0>:	sub    $0x8,%rsp
   0x0000000000400e91 <+4>:	mov    $0x4023d0,%esi
   0x0000000000400e96 <+9>:	callq  0x40133e <strings_not_equal>
   0x0000000000400e9b <+14>:	test   %eax,%eax
   0x0000000000400e9d <+16>:	je     0x400ea4 <phase_1+23>
   0x0000000000400e9f <+18>:	callq  0x40143d <explode_bomb>
   0x0000000000400ea4 <+23>:	add    $0x8,%rsp
   0x0000000000400ea8 <+27>:	retq   
End of assembler dump.
// Here we can see that something is being moved from address  0x4023d0 to esi. We know that it is string , so to examine we use ‘x/s’
(gdb) x/s 0x4023d0   
0x4023d0:	"The moon unit will be divided into two divisions." //this string has been moved to esi and it is passed to <string not equal>. Lets go to <+14> to see what it does.

(gdb) u *0x0000000000400e9b
0x0000000000400e9b in phase_1 ()
(gdb) disas
Dump of assembler code for function phase_1:
   0x0000000000400e8d <+0>:	sub    $0x8,%rsp
   0x0000000000400e91 <+4>:	mov    $0x4023d0,%esi
   0x0000000000400e96 <+9>:	callq  0x40133e <strings_not_equal>
=> 0x0000000000400e9b <+14>:	test   %eax,%eax
   0x0000000000400e9d <+16>:	je     0x400ea4 <phase_1+23>
   0x0000000000400e9f <+18>:	callq  0x40143d <explode_bomb>
   0x0000000000400ea4 <+23>:	add    $0x8,%rsp
   0x0000000000400ea8 <+27>:	retq   
End of assembler dump.
(gdb) i r
rax            0x1                 1   //this will call the bomb as 1&1 is not 0 if string we gave is not equal to answer.
rbx            0x4021f0            4202992
rcx            0x5                 5
rdx            0x1                 1
rsi            0x4023d0            4203472
rdi            0x402401            4203521
rbp            0x0                 0x0
rsp            0x7fffffffde80      0x7fffffffde80
r8             0x6037a0            6305696
r9             0x7c                124
r10            0xfffffffffffff6ed  -2323
r11            0x7ffff7dfa400      140737352016896
r12            0x400c60            4197472
r13            0x7fffffffdf80      140737488347008
r14            0x0                 0
r15            0x0                 0
rip            0x400e9b            0x400e9b <phase_1+14>
eflags         0x287               [ CF PF SF IF ]
cs             0x33                51
ss             0x2b                43
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
(gdb) del         // now that we got the string stored, lets run the program by first deleting all break points.
Delete all breakpoints? (y or n) y
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/lab-2/Desktop/12190090/bomb001/bomb 
Welcome to my fiendish little bomb. You have 6 phases with
which to blow yourself up. Have a nice day!
The moon unit will be divided into two divisions.  
Phase 1 defused. How about the next one?  // answer is correct phase one diffused.
